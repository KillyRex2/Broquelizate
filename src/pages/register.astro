---
import AuthLayout from "@/layouts/AuthLayout.astro";
import { actions } from "astro:actions";
import Swal from "sweetalert2";

const email = Astro.cookies.get("email")?.value ?? "";
const remmemberMe = !!email;
---

<AuthLayout>
  <div class="flex justify-center self-center z-10">
    <div class="p-12 bg-white mx-auto rounded-2xl w-100">
      <div class="mb-4">
        <h3 class="font-semibold text-2xl text-gray-800">Sign Up</h3>
        <p class="text-gray-500">Create a new account below.</p>
      </div>
      <form class="space-y-5" id="register-form">
        <div class="space-y-2">
          <label class="text-sm font-medium text-gray-700 tracking-wide">Name</label>
          <input
            class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="text"
            name="name"
            placeholder="John Doe"
            required
          />
        </div>
        <div class="space-y-2">
          <label class="text-sm font-medium text-gray-700 tracking-wide">Email</label>
          <input
            class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="email"
            name="email"
            value={email}
            placeholder="mail@gmail.com"
            required
          />
        </div>
        <div class="space-y-2">
          <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">Password</label>
          <input
            class="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="password"
            name="password"
            placeholder="Enter your password"
            required
          />
        </div>
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember_me"
              name="remember_me"
              type="checkbox"
              checked={remmemberMe}
              class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
            />
            <label for="remember_me" class="ml-2 block text-sm text-gray-800">
              Remember me
            </label>
          </div>
          <div class="text-sm">
            <a href="/login" class="text-green-400 hover:text-green-500">
              Already have an account?
            </a>
          </div>
        </div>
        <div>
          <button
            type="submit"
            id="btn-submit"
            class="disabled:bg-gray-300 w-full flex justify-center bg-green-400 hover:bg-green-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
          >
            Sign Up
          </button>
        </div>
      </form>
      <div class="pt-5 text-center text-gray-400 text-xs">
        <span>Copyright © 2024-{new Date().getFullYear()}</span>
      </div>
    </div>
  </div>

<script>
const { signIn } = await import("auth-astro/client")
import { actions } from "astro:actions";
import Swal from "sweetalert2";

const form = document.querySelector('#register-form') as HTMLFormElement;
const btnSubmit = document.querySelector('#btn-submit') as HTMLButtonElement;
const btnGoogle = document.querySelector('#btn-google') as HTMLButtonElement;
// const btnText = document.querySelector('#btn-text') as HTMLSpanElement;


form.addEventListener('submit', async (e) => {
  e.preventDefault();

  // Deshabilita el botón y cambia el texto
  btnSubmit.setAttribute('disabled', 'true');
  // btnText.textContent = 'Loading...';

  const formData = new FormData(form);
  const rememberMe = form.remember_me?.checked;
  const { data, error } = await actions.registerUser(formData);
if (error) {
    Swal.fire({
      icon: 'error',
      title: 'Registration failed',
      text: error.message || 'An error occurred during registration.'
    });
    // Rehabilita el botón y vuelve al texto original
    btnSubmit.removeAttribute('disabled');
    // btnText.textContent = 'Sign Up';
    return;
  }

  // Guardar la cookie de email si el usuario eligió recordar
  if (rememberMe) {
    document.cookie = `email=${formData.get('email')}; path=/; max-age=31536000;`;
  } else {
    document.cookie = `email=; path=/; max-age=0;`; // Elimina la cookie si no se recuerda
  }


      // Login automático
const resp = await signIn('credentials', {
  email: formData.get('email') as string,
  password: formData.get('password') as string,
  redirect: false,
} as any);

  if (resp) {
    Swal.fire({
      icon: 'error',
      title: 'Login failed',
      text: 'User or email are not correct'
    });
    // Rehabilita el botón y vuelve al texto original
    btnSubmit.removeAttribute('disabled');
    return;
  }

  // Redirige si todo salió bien
  window.location.replace('/');


});
</script>
</AuthLayout>
