---
import ProductSlideshow from "@/components/products/ProductSlideshow.astro";
import ProductsLayout from "@/layouts/ProductsLayout.astro";
import { actions } from "astro:actions";
import { Formatter } from "@/utils";

const { slug } = Astro.params;
const { data, error } = await Astro.callAction(
  actions.getProductBySlug,
  slug ?? ""
);
if (error) {
  return Astro.redirect("/404");
}
const { product, images } = data;
---

<ProductsLayout title={product.name} description={product.description}>
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
    <!-- Swiper ajustado -->

      <div class="relative w-full h-[400px]">
        <ProductSlideshow
          images={images}
         />
      </div>
    

    <!-- Detalles -->
    <section class="flex flex-col justify-between">
      <div>
        <h1 class="text-4xl font-bold text-gray-100 mb-2">{product.name}</h1>
        <p class="text-2xl font-semibold text-yellow-500 mb-4">
          {Formatter.currency(product.price)}
        </p>

        <span class="inline-block bg-yellow-100 text-yellow-700 px-3 py-1 rounded-full text-sm font-medium mb-6">
          {product.category}
        </span>

        <p class="text-xl text-gray-200 leading-relaxed mb-8">
          {product.description}
        </p>
      </div>

      <!-- Cantidad y CTA -->
      <div class="space-y-4">
        <div class="flex items-center space-x-4">
          <button
            id="qty-decr"
            class="w-10 h-10 flex items-center justify-center bg-gray-700 rounded-lg shadow-sm hover:bg-gray-200 transition"
          >−</button>
          <input
            id="qty-input"
            type="number"
            min="1"
            value="1"
            class="w-16 text-center p-2 border border-gray-300 bg-gray-700 rounded-lg"
          />
          <button
            id="qty-incr"
            class="w-10 h-10 flex items-center justify-center bg-gray-700 rounded-lg shadow-sm hover:bg-gray-200 transition"
          >+</button>
        </div>

        <button
          id="add-to-cart"
          class="w-full py-3 bg-yellow-500 text-white font-semibold rounded-lg shadow-md hover:bg-yellow-600 transition"
        >
          Añadir al carrito
        </button>
      </div>
    </section>
  </div>

  <!-- Miniaturas si tienes más imágenes
  {images.length > 1 && (
    <div class="mt-12">
      <h2 class="text-xl font-bold text-white mb-4">Más imágenes</h2>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        {images.map((src) => (
          <img
            src={src}
            alt={product.name}
            class="w-full h-32 object-cover rounded-xl shadow-sm"
          />
        ))}
      </div>
    </div>
  )} -->

  <input type="hidden" id="product-id" value={product.id} />
</ProductsLayout>

<script>
  import { itemsInCart } from "@/store";
  import { CartCookiesClient } from "@/utils";
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    const qtyInput = document.getElementById("qty-input");
    const decrementBtn = document.getElementById("qty-decr");
    const incrementBtn = document.getElementById("qty-incr");
    const addBtn = document.getElementById("add-to-cart");
    const productIdInput = document.getElementById("product-id");

    if (
      !(qtyInput instanceof HTMLInputElement) ||
      !(decrementBtn instanceof HTMLElement) ||
      !(incrementBtn instanceof HTMLElement) ||
      !(addBtn instanceof HTMLButtonElement) ||
      !(productIdInput instanceof HTMLInputElement)
    ) {
      console.error("Elementos faltantes para cantidad / carrito.");
      return;
    }

    let quantity = 1;

    decrementBtn.addEventListener("click", () => {
      quantity = Math.max(1, quantity - 1);
      qtyInput.value = quantity.toString();
    });
    incrementBtn.addEventListener("click", () => {
      quantity = Math.min(999, quantity + 1);
      qtyInput.value = quantity.toString();
    });

    addBtn.addEventListener("click", async () => {
      addBtn.disabled = true;
      const cart = CartCookiesClient.addItem({
        productId: productIdInput.value,
        quantity,
      });
      itemsInCart.set(cart.length);
      await navigate("/cart");
    });
  });
</script>
