---
// src/components/admin/OrdersTable.astro
import { db, orders } from 'astro:db';
import { desc } from 'drizzle-orm';

// 1. Obtenemos TODAS las órdenes, ordenadas por las más recientes primero.
const allOrders = await db.select()
  .from(orders)
  .orderBy(desc(orders.createdAt))
  .all();

// --- Funciones de ayuda para dar formato ---
const formatCurrency = (value: number | null) => {
  if (value === null) return 'N/A';
  return new Intl.NumberFormat('es-MX', { style: 'currency', currency: 'MXN' }).format(value);
};

const formatDate = (date: Date | null) => {
  if (!date) return 'N/A';
  return new Date(date).toLocaleDateString('es-MX', {
    year: 'numeric',
    month: '2-digit',
    day: '2-digit'
  });
};

const getCustomerName = (email: string | null) => {
  if (!email) return "Cliente Anónimo";
  return email.split('@')[0]
    .replace(/[._-]/g, ' ')
    .split(' ')
    .map(p => p.charAt(0).toUpperCase() + p.slice(1))
    .join(' ');
};

const statusStyles: { [key: string]: string } = {
  completed: 'bg-green-50 text-green-800',
  pending:   'bg-yellow-50 text-yellow-800',
  shipped:   'bg-blue-50 text-blue-800',
  cancelled: 'bg-red-50 text-red-800',
  default:   'bg-gray-50 text-gray-800',
};
---

<div class="w-full bg-white rounded-2xl shadow-lg overflow-hidden">
  <!-- Header -->
  <div class="bg-gradient-to-r from-amber-500 to-yellow-400 p-6 flex justify-between items-center">
    <h2 class="text-2xl md:text-3xl font-semibold text-white">Historial de Órdenes</h2>
    <span class="text-lg font-medium text-white opacity-90">{allOrders.length} órdenes</span>
  </div>

  <!-- Tabla -->
  <div class="overflow-x-auto p-6">
    <table class="min-w-full table-auto border-collapse">
      <thead class="bg-gray-100 sticky top-0">
        <tr>
          <th class="px-4 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-700">Orden ID</th>
          <th class="px-4 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-700">Cliente</th>
          <th class="px-4 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-700">Fecha</th>
          <th class="px-4 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-700">Estado</th>
          <th class="px-4 py-3 text-right text-sm font-medium uppercase tracking-wider text-gray-700">Total</th>
        </tr>
      </thead>
      <tbody>
        {allOrders.map((order, idx) => (
          <tr
            class={`border-b border-gray-200 ${idx % 2 === 0 ? 'bg-white' : 'bg-gray-50'} hover:bg-amber-50 transition-colors cursor-pointer`}
            onclick={`window.location.href = '/admin/orders/${encodeURIComponent(order.id)}'`}
          >
            <td class="px-4 py-4 font-mono text-sm text-gray-800">#{order.orderNumber || order.id.slice(0, 8)}</td>
            <td class="px-4 py-4 font-medium text-gray-900">{getCustomerName(order.customerEmail)}</td>
            <td class="px-4 py-4 text-sm text-gray-600">{formatDate(order.createdAt)}</td>
            <td class="px-4 py-4">
              <span class={`inline-block px-3 py-1 text-xs font-semibold rounded-full ${statusStyles[order.status] || statusStyles.default}`}> 
                {order.status.charAt(0).toUpperCase() + order.status.slice(1)}
              </span>
            </td>
            <td class="px-4 py-4 font-semibold text-gray-900 text-right">{formatCurrency(order.total)}</td>
          </tr>
        ))}
      </tbody>
    </table>

    {allOrders.length === 0 && (
      <div class="text-center py-16">
        <p class="text-gray-500 text-lg">Aún no se ha realizado ninguna orden.</p>
      </div>
    )}
  </div>
</div>
